from typing import List, Tuple

def successors(state: Tuple[Tuple[int,int], List[List[int]]]):
    (x,y),g=state
    for dx,dy in [(0,1),(0,-1),(1,0),(-1,0)]:
        nx,ny=x+dx,y+dy
        if 0<=nx<len(g) and 0<=ny<len(g[0]) and g[nx][ny]==1:
            ng=[row[:] for row in g]; ng[nx][ny]=0
            yield ( (nx,ny), ng )

def dfs(state,vis):
    pos,grid=state
    if all(c==0 for row in grid for c in row): return True
    if state in vis: return False
    vis.add(state)
    return any(dfs(s,vis) for s in successors(state,))

if __name__=="__main__":
    grid=[[0,1,1,1],
          [0,0,1,0],
          [1,0,0,1],
          [1,1,1,0]]
    start=((0,0),grid)
    print("The room can be cleaned." if dfs(start,set()) else "The room cannot be cleaned.")
